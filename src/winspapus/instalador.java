/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * instalador.java
 *
 * Created on 06-may-2014, 11:10:35
 */
package winspapus;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import config.endesencripta;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Spapu
 */
public class instalador extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    Principal prin;
    String dd;
    Connection conespapu, conex;
    /** Creates new form instalador */
    int regis;
    private int cuentas;
    public instalador(java.awt.Frame parent, boolean modal, Connection conespapu, Principal prin, Connection conex, String dd, int regis) {
        super(parent, modal);
        initComponents();
        this.prin=prin; 
        this.dd=dd;
        this.conespapu=conespapu;
        this.conex=conex;
        this.regis = regis;
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winspapus/imagenes/ok.fw.png"))); // NOI18N
        okButton.setToolTipText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winspapus/imagenes/eliminar.png"))); // NOI18N
        cancelButton.setToolTipText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Licencia:");

        jPanel4.setBackground(new java.awt.Color(100, 100, 100));

        jLabel2.setBackground(new java.awt.Color(91, 91, 95));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Proceso de Instalaci√≥n Spapu");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jTextField1.setName(""); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    
    String sql,fecha1,fecha2; 
    Date hoy = new Date();
    SimpleDateFormat formatofecha=new SimpleDateFormat("yyyy-MM-dd");    
    if ("DEMO".equals(jTextField1.getText().toUpperCase()))
    {       
        int isdemo=0;
        String consulta = "SELECT demo FROM instalacion";
            try {
                Statement stconsulta = (Statement) conex.createStatement();
                ResultSet rst = stconsulta.executeQuery(consulta);
                while(rst.next()){
                    isdemo=rst.getInt(1);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al consultar si es demo "+ex.getMessage());
                Logger.getLogger(instalador.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        if(regis!=-5 && isdemo==0){
            try {
                fecha1=formatofecha.format(hoy);    
                fecha2=formatofecha.format(hoy);    
                int cuentas1=0;
                sql="insert into mpresadm (fecha, codigo, tm, licencia, status, activo, comprobacion) "
                        + " values ('"+fecha1+"','"+dd+"','DEMO','DEMO','1',1,'"+ fecha2 +"')";
                String cuenta = "SELECT COUNT(*) FROM instalacion";
                Statement stcuenta = (Statement) conex.createStatement();
                ResultSet rstcuenta = stcuenta.executeQuery(cuenta);
                while(rstcuenta.next())
                {
                    cuentas1 = rstcuenta.getInt(1);
                }
               
                if(cuentas1==0){
                    String inserta = "INSERT INTO instalacion (id, propietario, demo, representante, rif, direccion, telefono, publico, bloqueado, licencia)"
                                    + " VALUES ('1','SISTEMAS R.H.', 1, '','', 'Barrio Obrero', '0276-3579562',0,0,'DEMO')";
                   Statement st = (Statement) conex.createStatement();
                   st.execute(inserta);
                }
                else{
                     String update = "UPDATE instalacion SET demo='1' WHERE id='1'";
                   Statement st = (Statement) conex.createStatement();
                   st.execute(update); 
                }
                    System.out.println(sql);
                Statement demo = (Statement) conex.createStatement();
                demo.execute(sql);
                prin.sinst=1;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al insertar nueva instalaci√≥n en BD "+ex.getMessage());
                Logger.getLogger(instalador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Ya ha probado la versi√≥n DEMO comuniquese con Inversiones R.H. C.A. para que le asignen un nuevo serial");
            System.exit(0);
        }
     
    }   
    else
    {    
                endesencripta desen = new endesencripta(conex);
            try {
                conespapu = (Connection) DriverManager.getConnection("jdbc:mysql://spapu2.db.11811826.hostedresource.com/spapu2", "spapu2", desen.getClaveServer());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al conectar con BD del servidor "+ex.getMessage());
                Logger.getLogger(instalador.class.getName()).log(Level.SEVERE, null, ex);
            }
                sql="select * from compra where serial='" + jTextField1.getText()  + "'";                
                Statement ser1 = null;
                try {
                       
                                                    
                    ser1 = (Statement) conespapu.createStatement();
                    ResultSet resg = null;
                    resg = ser1.executeQuery(sql);
                    String idcompra = null,idusuario = null;
                    while (resg.next())
                    {                
                        idcompra=resg.getString("id");
                        idusuario=resg.getString("usuario_id");                    
                    }
                    
                    
                    Statement verc=(Statement) conespapu.createStatement();
                    sql="select count(*) from version_compra where compra_id='"+ idcompra + "' and instalacion=0";
                    ResultSet rvcom= verc.executeQuery(sql);
                    int cuentan = 0;
                    while (rvcom.next())
                    {
                        cuentan=rvcom.getInt(1);
                        
                    }
                    if (cuentan>0)
                    {
                      Versiones version=new Versiones(prin, true, conespapu, jTextField1.getText(), idcompra, idusuario,conex,prin);
                      int x=(prin.getWidth()/2)-600/2;
                      int y=(prin.getHeight()/2)-200/2;
                      version.setBounds(x, y, 600, 200);
                      version.setVisible(true);
                    }    
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Tiene Instalaciones Disponibles Contacte con Sistemas RH C.A. soporte_tecnico@spapu.com.ve");
                        System.exit(0);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Error al Consultar compras en el servidor. "+ex.getMessage());
                    Logger.getLogger(instalador.class.getName()).log(Level.SEVERE, null, ex);
                }
                //       
            
           
        //       
    
    }
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        prin.sinst=0;       
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped

    Character c = evt.getKeyChar();
                if(Character.isLetter(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }// TODO add your handling code here:
    // TODO add your handling code here:
}//GEN-LAST:event_jTextField1KeyTyped
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
